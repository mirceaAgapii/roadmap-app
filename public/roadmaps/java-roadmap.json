{
  "generalTitle": "Java",
  "roadmap": [
    {
      "title": "Trainee",
      "children": [
        {
          "title": "Java Fundamentals",
          "description": "Introduce the essential building blocks of Java programming. Covers understanding what Java is, setting up the environment, learning basic syntax, and writing your first programs.",
          "subtopics": [
            {"title": "What is Java?"},
            {"title": "Installing Java"},
            {"title": "Java Syntax Basics"},
            {"title": "Your First Java Program"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Effective Java [Joshua Bloch]", "url": ""},
            {"type": "BOOK", "text": "Java: The Complete Reference [Herbert Schildt]", "url": ""},
            {"type": "BOOK", "text": "Java 8 in Action. Lambdas, Streams, and functional-style programming [Raoul-Gabriel Urma, Mario Fusco, Alan Mycroft]", "url": ""}
          ]
        },
        {
          "title": "Working with IDEs",
          "description": "Learn to use modern Java IDEs like IntelliJ IDEA or Eclipse for editing, navigating, running, and debugging code. Get familiar with project setup, code completion, quick fixes, and using built-in terminals.",
          "subtopics": [
            {"title": "Setting up your first project in an IDE"},
            {"title": "Basic navigation and code editing"},
            {"title": "Running and debugging Java applications"},
            {"title": "Using code completion and quick fixes"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "The Well-Grounded Java Developer, Second Edition [Benjamin Evans, Martijn Verburg, Jason Clark]", "url": ""},
            {"type": "BOOK", "text": "Java: The Complete Reference [Herbert Schildt]", "url": ""}
          ]
        },
        {
          "title": "Development Tools & Version Control",
          "description": "Start using developer tools like the terminal and Git. Learn basic command line usage and version control fundamentals for tracking your code changes.",
          "subtopics": [
            {"title": "Using the Terminal"},
            {"title": "Intro to Git & Version Control"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "WEBSITE", "text": "Git Cheatsheet – GitHub", "url": "https://training.github.com/downloads/github-git-cheat-sheet/"}
          ]
        },
        {
          "title": "Writing Maintainable Code",
          "description": "Get introduced to best practices for writing clean, readable, and maintainable Java code, as well as basic debugging to quickly identify and fix errors.",
          "subtopics": [
            {"title": "Writing clean, maintainable code"},
            {"title": "Basic Debugging"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Clean Code [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "The Clean Coder [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "The Well-Grounded Java Developer, Second Edition [Benjamin Evans, Martijn Verburg, Jason Clark]", "url": ""}
          ]
        }
      ]
    },
    {
      "title": "Junior",
      "children": [
        {
          "title": "Core Java & Object-Oriented Concepts",
          "description": "Solidify your understanding of Java fundamentals, object-oriented principles, and tools for junior-level developers. Learn about the Java language, OOP, collections, streams, generics, and how the Java platform works.",
          "subtopics": [
            {"title": "Java fundamentals (syntax, OOP, collections, streams, exception handling, concurrency, generics)"},
            {"title": "JVM, JDK, JRE Differences"},
            {"title": "Maven"},
            {"title": "Build tools: Maven, Gradle"},
            {"title": "IDEs and plugin ecosystem: IntelliJ IDEA"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Java 8 in Action. Lambdas, Streams, and functional-style programming [Raoul-Gabriel Urma, Mario Fusco, Alan Mycroft]", "url": ""},
            {"type": "BOOK", "text": "Effective Java [Joshua Bloch]", "url": ""},
            {"type": "BOOK", "text": "Java: The Complete Reference [Herbert Schildt]", "url": ""},
            {"type": "BOOK", "text": "The Well-Grounded Java Developer, Second Edition [Benjamin Evans, Martijn Verburg, Jason Clark]", "url": ""},
            {"type": "BOOK", "text": "OCP Oracle Certified Professional Java SE 17 Developer Study Guide [Jeanne Boyarsky, Scott Selikoff]", "url": ""}
          ]
        },
        {
          "title": "Development Workflows & SQL Basics",
          "description": "Learn to use Git for version control, understand basic SQL concepts, and get familiar with essential database tools and debugging workflows.",
          "subtopics": [
            {"title": "Git basics, branching strategies"},
            {"title": "Database clients (DBeaver)"},
            {"title": "Postman"},
            {"title": "SQL fundamentals (Joins, Indexing)"},
            {"title": "Troubleshooting (logs, debugging in production)"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "WEBSITE", "text": "Git Cheatsheet – GitHub", "url": "https://training.github.com/downloads/github-git-cheat-sheet/"},
            {"type": "BOOK", "text": "The Phoenix Project: A Novel About IT, DevOps, and Helping Your Business Win [Gene Kim, George Spafford, Kevin Behr]", "url": ""},
            {"type": "BOOK", "text": "Java: The Complete Reference [Herbert Schildt]", "url": ""}
          ]
        },
        {
          "title": "Documentation, Testing & Clean Code",
          "description": "Learn to write and document maintainable code, and understand unit testing, mocking, coverage tools, and the basics of Agile & Scrum.",
          "subtopics": [
            {"title": "Writing technical documentation (API Documentation, README, UML, decision logs)"},
            {"title": "JUnit & Mockito"},
            {"title": "Unit Testing vs Integration Testing vs End-to-End Testing"},
            {"title": "Introduction to Mocking"},
            {"title": "Code coverage tools"},
            {"title": "Learning Agile & Scrum methodologies"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "JUnit in Action (2nd Edition) [Petar Tahchiev]", "url": ""},
            {"type": "BOOK", "text": "The Passionate Programmer. Creating a Remarkable Career in Software Development [Chad Fowler]", "url": ""},
            {"type": "BOOK", "text": "The Clean Coder [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "The Software Craftsman: Professionalism, Pragmatism, Pride (Robert C. Martin Series) [Sandro Mancuso]", "url": ""},
            {"type": "BOOK", "text": "Clean Code [Robert C. Martin]", "url": ""}
          ]
        }
      ]
    },
    {
      "title": "Middle",
      "children": [
        {
          "title": "Spring & Persistence Essentials",
          "description": "Master essential Spring concepts and understand how to persist and manage data in Java applications.",
          "subtopics": [
            {"title": "Spring Boot basics (REST APIs, controllers, services)"},
            {"title": "Spring Data JPA (CRUD operations, Hibernate, JDBC, transaction management)"},
            {"title": "Spring Security basics (JWT authentication, role-based access)"},
            {"title": "Spring Profiles & Configurations"},
            {"title": "Event-driven development: Kafka, RabbitMQ"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "VIDEO", "text": "Spring Boot Crash Course - Java Brains", "url": "https://www.youtube.com/watch?v=msXL2oDexqw"},
            {"type": "BOOK", "text": "Spring Boot in Action [Craig Walls]", "url": ""},
            {"type": "BOOK", "text": "Java Persistence with Hibernate [Christian Bauer, Gavin King]", "url": ""},
            {"type": "BOOK", "text": "RESTful Web Services [Leonard Richardson, Sam Ruby]", "url": ""}
          ]
        },
        {
          "title": "Design Principles & Patterns",
          "description": "Learn to design software systems using well-established principles and patterns for robust, maintainable, and scalable Java applications.",
          "subtopics": [
            {"title": "Basic design patterns (Singleton, Factory, Strategy)"},
            {"title": "Advanced design patterns (Observer, Builder, CQRS, Event Sourcing)"},
            {"title": "Understanding SOLID principles"},
            {"title": "API error handling (global exception handling with @ControllerAdvice)"},
            {"title": "RESTful API design (JSON, HTTP methods, status codes)"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Head First Design Patterns (2nd Edition) [Eric Freeman]", "url": ""},
            {"type": "WEBSITE", "text": "Refactoring.Guru (Design Patterns)", "url": "https://refactoring.guru/design-patterns"},
            {"type": "BOOK", "text": "REST API Design Rulebook [Mark Masse]", "url": ""},
            {"type": "BOOK", "text": "Clean Architecture: A Craftsman's Guide to Software Structure and Design [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "Clean Code [Robert C. Martin]", "url": ""}
          ]
        },
        {
          "title": "Databases & Data Management",
          "description": "Deepen your understanding of database foundations, data management, and using JPA/Hibernate for ORM in Java.",
          "subtopics": [
            {"title": "ORM with JPA/Hibernate"},
            {"title": "Relational database foundations"},
            {"title": "PostgreSQL with Spring Data JPA"},
            {"title": "Transactions, optimistic vs pessimistic locking, indexing, caching strategies"},
            {"title": "ACID properties"},
            {"title": "NoSQL foundation"},
            {"title": "Connection Pooling with HikariCP"},
            {"title": "Data management & integrity: schema migrations (Flyway, Liquibase)"},
            {"title": "Backup & Restore basics"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Java Persistence with Hibernate [Christian Bauer, Gavin King]", "url": ""},
            {"type": "BOOK", "text": "Java: The Complete Reference [Herbert Schildt]", "url": ""}
          ]
        },
        {
          "title": "Performance & Optimization",
          "description": "Understand the Java memory model, learn basic JVM tuning, profiling, and best practices for writing efficient code.",
          "subtopics": [
            {"title": "Java memory model (stack, heap), garbage collection basics"},
            {"title": "Profiling tools: VisualVM, JProfiler"},
            {"title": "JVM tuning: heap analysis"},
            {"title": "Lazy initialization"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Java Performance: The Definitive Guide [Scott Oaks]", "url": ""}
          ]
        },
        {
          "title": "DevOps & Infrastructure",
          "description": "Learn the essentials of modern development workflows, including CI/CD pipelines and working with Docker.",
          "subtopics": [
            {"title": "CI/CD: Jenkins, pipelines, artifact management"},
            {"title": "Docker basics: images, containers, Dockerfile, Docker Compose, volumes"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "The Phoenix Project: A Novel About IT, DevOps, and Helping Your Business Win [Gene Kim, George Spafford, Kevin Behr]", "url": ""}
          ]
        },
        {
          "title": "Testing & QA",
          "description": "Explore different testing strategies and tools for Java development, including TDD and the testing pyramid.",
          "subtopics": [
            {"title": "Test-driven development (TDD)"},
            {"title": "Red-Green-Refactor cycle"},
            {"title": "Behavior-Driven Development (BDD)"},
            {"title": "Introduction to Cucumber"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "JUnit in Action (2nd Edition) [Petar Tahchiev]", "url": ""}
          ]
        },
        {
          "title": "Refactoring & Complexity",
          "description": "Learn how to refactor codebases for clarity and maintainability, and understand the basics of time & space complexity.",
          "subtopics": [
            {"title": "Refactoring codebases"},
            {"title": "Understanding Time & Space Complexity"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "WEBSITE", "text": "Refactoring.Guru (Design Patterns)", "url": "https://refactoring.guru/design-patterns"},
            {"type": "BOOK", "text": "Clean Code [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "Fundamentals of Software Architecture. An Engineering Approach [Mark Richards, Neal Ford]", "url": ""}
          ]
        }
      ]
    },
    {
      "title": "Middle+",
      "children": [
        {
          "title": "Advanced Frameworks & Patterns",
          "description": "Explore advanced topics in Spring, including security, reactive programming, and design patterns for robust and scalable applications.",
          "subtopics": [
            {"title": "Advanced Spring Boot: AOP, Spring Security, Spring Cloud"},
            {"title": "Spring Boot auto-configuration, custom starters"},
            {"title": "Spring reactive programming: Flux, Mono, WebFlux"},
            {"title": "Advanced design patterns (Observer, Builder, CQRS, Event Sourcing)"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Spring Boot in Action [Craig Walls]", "url": ""},
            {"type": "BOOK", "text": "RESTful Web Services [Leonard Richardson, Sam Ruby]", "url": ""},
            {"type": "BOOK", "text": "Head First Design Patterns (2nd Edition) [Eric Freeman]", "url": ""},
            {"type": "WEBSITE", "text": "Refactoring.Guru (Design Patterns)", "url": "https://refactoring.guru/design-patterns"}
          ]
        },
        {
          "title": "Architecture & Distributed Systems",
          "description": "Master advanced architecture topics, including microservices vs monoliths, distributed systems, and best practices for secure, scalable design.",
          "subtopics": [
            {"title": "Monolith vs. Microservices architecture"},
            {"title": "CAP theorem, distributed transaction strategies (Saga, Outbox pattern)"},
            {"title": "Clean code principles"},
            {"title": "Clean architecture principles"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Fundamentals of Software Architecture. An Engineering Approach [Mark Richards, Neal Ford]", "url": ""},
            {"type": "BOOK", "text": "Software Architecture Patterns [Mark Richards]", "url": ""},
            {"type": "BOOK", "text": "Clean Architecture: A Craftsman's Guide to Software Structure and Design [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "Clean Code [Robert C. Martin]", "url": ""}
          ]
        }
      ]
    },
    {
      "title": "Senior",
      "children": [
        {
          "title": "Performance & Technical Leadership",
          "description": "Lead teams and projects, optimize performance, and master distributed systems at scale.",
          "subtopics": [
            {"title": "Performance benchmarking, concurrency tuning"},
            {"title": "Distributed Systems"},
            {"title": "Technical Leadership"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Java Performance: The Definitive Guide [Scott Oaks]", "url": ""},
            {"type": "BOOK", "text": "Fundamentals of Software Architecture. An Engineering Approach [Mark Richards, Neal Ford]", "url": ""},
            {"type": "BOOK", "text": "The Software Craftsman: Professionalism, Pragmatism, Pride (Robert C. Martin Series) [Sandro Mancuso]", "url": ""},
            {"type": "BOOK", "text": "A Philosophy of Software Design, 2nd Edition [Michael T. Nygard]", "url": ""}
          ]
        },
        {
          "title": "Mentoring & Collaboration",
          "description": "Support and mentor colleagues, conduct effective code reviews, estimate and plan tasks, and communicate with stakeholders.",
          "subtopics": [
            {"title": "Team Mentoring"},
            {"title": "Code Review Mastery"},
            {"title": "Leading small technical discussions"},
            {"title": "Mentoring junior developers"},
            {"title": "Effective code reviews"},
            {"title": "Task estimation basics"},
            {"title": "Stakeholder Communication"},
            {"title": "Project Estimation & Planning"},
            {"title": "Release & Deployment Strategy"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "The Clean Coder [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "The Software Craftsman: Professionalism, Pragmatism, Pride (Robert C. Martin Series) [Sandro Mancuso]", "url": ""},
            {"type": "BOOK", "text": "Code Simplicity: The Fundamentals of Software [Max Kanat-Alexander]", "url": ""},
            {"type": "BOOK", "text": "A Philosophy of Software Design, 2nd Edition [Michael T. Nygard]", "url": ""},
            {"type": "BOOK", "text": "Soft Skills: The Software Developer’s Life Manual [John Sonmez]", "url": ""},
            {"type": "VIDEO", "text": "Celeste Headlee: 10 ways to have a better conversation | TED", "url": "https://www.youtube.com/watch?v=R1vskiVDwl4"}
          ]
        },
        {
          "title": "Security & Best Practices",
          "description": "Master security best practices, from input validation and API versioning to secrets management and error handling.",
          "subtopics": [
            {"title": "Input validation, secure API design"},
            {"title": "Secure authentication: OAuth2, JWT, role-based access control"},
            {"title": "Sanitizing and encoding outputs"},
            {"title": "CORS Configuration"},
            {"title": "API Versioning & Deprecation strategy"},
            {"title": "Idempotency and safe error responses"},
            {"title": "Cookies"},
            {"title": "Password storage, secrets management"}
          ],
          "tags": ["Core"],
          "resources": [
            {"type": "BOOK", "text": "Clean Architecture: A Craftsman's Guide to Software Structure and Design [Robert C. Martin]", "url": ""},
            {"type": "BOOK", "text": "REST API Design Rulebook [Mark Masse]", "url": ""}
          ]
        }
      ]
    }
  ]
}
